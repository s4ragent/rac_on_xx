---
  - name: "dbca_cmd"
    set_fact:
      DBCA_CMD: "{{ ORA_ORACLE_HOME }}/bin/dbca -silent -createDatabase -templateName {{ TEMPLATENAME }} -gdbName {{ DBNAME }} -sid {{ SIDNAME }} -createAsContainerDatabase true -numberOfPDBs 1 -pdbName {{ PDBNAME }} -pdbAdminPassword {{ PDBADMINPASSWORD }} -SysPassword {{ SYSPASSWORD }} -SystemPassword {{ SYSTEMPASSWORD }} -emConfiguration NONE -redoLogFileSize {{ REDOFILESIZE }} -recoveryAreaDestination +{{ FRA_DISKGROUP_NAME }} -storageType ASM -asmSysPassword {{ ASMSYSPASSWORD }} -diskGroupName {{ DATA_DISKGROUP_NAME }} -characterSet {{ CHARSET }} -nationalCharacterSet {{ NCHAR }} -totalMemory {{ MEMORYTARGET }} -databaseType {{ DATABASETYPE }}"
    tags:
      - dbcaparalell
      - dbca1st
      - dbcaother

  - name: "dbca parallel"
    become: yes
    become_user: oracle
    shell: "{{ DBCA_CMD }} -nodelist {% for host in groups['dbserver'] %}{{ hostvars[host]['NODENAME'] }}{% if not loop.last %},{% endif %}{% endfor %}"
    register: dbca_ret_code
    failed_when: dbca_ret_code.rc not in [0,6]
    when: inventory_hostname == groups["dbserver"][0] and dbca == "paralell"
    tags:
      - dbcaparalell

  - name: "dbca serial first node"
    become: yes
    become_user: oracle
    shell: "{{ DBCA_CMD }} -nodelist {{ NODENAME }}"
    register: dbca_ret_code
    failed_when: dbca_ret_code.rc not in [0,6]
    when: inventory_hostname == groups["dbserver"][0] and dbca == "serial"
    tags:
      - dbca1st

  - name: "dbca serial othernode"
    become: yes
    become_user: oracle
    shell: "{{ ORA_ORACLE_HOME }}/bin/dbca -silent -addInstance -gdbName {{ DBNAME }} -nodeName {{ hostvars[item.1]['NODENAME'] }}"
    with_indexed_items: "{{ groups['dbserver'] }}"
    register: dbca_ret_code
    failed_when: dbca_ret_code.rc not in [0,6]
    when: inventory_hostname == groups["dbserver"][0] and item.0 !=0 and dbca == "serial"
    tags:
      - dbcaother

  - name: "add pdb service"
    become: yes
    become_user: oracle
    shell: "{{ ORA_ORACLE_HOME }}/bin/srvctl add service -d {{ DBNAME }} -pdb {{ PDBNAME }} -s SRV{{ PDBNAME }} -serverpool {{ SERVERPOOLNAME }}"
    environment:
      ORACLE_HOME:
        "{{ ORA_ORACLE_HOME }}"
    when: inventory_hostname == groups["dbserver"][0] and dbca != "delete"
    tags:
      - addpdbservice

  - name: "start pdb"
    become: yes
    become_user: oracle
    shell: "{{ ORA_ORACLE_HOME }}/bin/srvctl start service -d {{ DBNAME }} -s SRV{{ PDBNAME }}"
    environment:
      ORACLE_HOME:
        "{{ ORA_ORACLE_HOME }}"
    ignore_errors: true
    when: inventory_hostname == groups["dbserver"][0] and dbca != "delete"
    tags:
      - addpdbservice
      - startpdbservice

  - name: "delete database"
    become: yes
    become_user: oracle
    shell: "{{ ORA_ORACLE_HOME }}/bin/dbca -silent -deleteDatabase -sourceDB {{ DBNAME }} -sysDBAUserName sys -sysDBAPassword {{ SYSPASSWORD }}  -forceArchiveLogDeletion"
    when: inventory_hostname == groups["dbserver"][0] and dbca == "delete"
    tags:
      - deletedatabase

  - name: "delete server pool"
    become: yes
    become_user: grid
    environment:
      ORACLE_HOME:
        "{{ GRID_ORACLE_HOME }}"
    shell: "{{ GRID_ORACLE_HOME }}/bin/srvctl remove srvpool -serverpool {{ SERVERPOOLNAME }}"
    when: inventory_hostname == groups["dbserver"][0] and dbca == "delete"
    tags:
      - deletedatabase
      - deleteserverpool

  - name: "crsctl"
    become: yes
    become_user: grid
    shell: "{{ GRID_ORACLE_HOME }}/bin/crsctl status resource -t"
    register: crsctl_result
    tags:
      - deletedatabase

  - debug: var=crsctl_result.stdout_lines
    tags:
      - deletedatabase
