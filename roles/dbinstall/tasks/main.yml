---
  - set_fact: INSTALL_DB_OPS=""
    when: INSTALL_DB_OPS is undefined

  - name: "copy db media"
    become: yes
    become_user: oracle
    unarchive:
      src: "/media/{{ DB_MEDIA }}"
      dest: "{{ ORA_ORACLE_HOME }}"
      creates: "{{ ORA_ORACLE_HOME }}/bin"
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - createdbrsp
      - download
      - downloaddb
      
  - name: "create db.rsp"
    become: yes
    template: 
      src: db.rsp.j2 
      dest: /home/oracle/db.rsp 
      owner: oracle 
      group: oinstall 
      mode: 0644
    when: inventory_hostname == groups["dbserver"][0]
    tags:
      - createdbrsp
      
  - name: "runInstaller(db)"
    become: yes
    become_user: oracle
    shell: "{{ ORA_ORACLE_HOME }}/runInstaller -silent -responseFile /home/oracle/db.rsp -waitforcompletion {{ INSTALL_OPS }} {{ INSTALL_DB_OPS }}"
    when: inventory_hostname == groups["dbserver"][0]
    ignore_errors: True
    register: runinstallerdb_result
    tags:
      - runinstallerdb

  - debug: var=runinstallerdb_result.stdout_lines
    when: inventory_hostname == groups["dbserver"][0]
    failed_when: runinstallerdb_result.rc !=0 and runinstallerdb_result.rc != 250 and runinstallerdb_result.rc != 6
    tags:
      - runinstallerdb

  - name: "db root.sh"
    become: yes
    shell: "{{ ORA_ORACLE_HOME }}/root.sh -silent"
    register: dbrootsh_result
    tags:
      - dbrootsh

  - debug: var=dbrootsh_result.stdout_lines
    tags:
      - dbrootsh

  - name: "disable dnfs"
    become: yes
    shell: "make -f ins_rdbms.mk ORACLE_HOME={{ ORA_ORACLE_HOME }} dnfs_off"
    args:
      chdir: "{{ ORA_ORACLE_HOME }}/rdbms/lib"
    when: DNFS is defined and DNFS == 'disable'
    tags:
      - dbrootsh
      - oradisablednfs
